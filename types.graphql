type Basket {
  id: ID! @isUnique
  items: [BasketItem!]! @relation(name: "BasketOnBasketItem")
  createdAt: DateTime!
  updatedAt: DateTime!
}

type BasketItem {
  id: ID! @isUnique
  orderedItem: Product! @relation(name: "OrderedBasketItem")
  quantity: Int @defaultValue(value: 1)
  Basket: Basket @relation(name: "BasketOnBasketItem")
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Product {
  id: ID! @isUnique
  name: String!
  description: String
  sku: String
  amount: Int! @defaultValue(value: 0)
  category: Category @relation(name: "ProductCategories")
  BasketItems: [BasketItem!]! @relation(name: "OrderedBasketItem")
  active: Boolean @defaultValue(value: true)
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Category {
  id: ID! @isUnique
  name: String!
  products: [Product!]! @relation(name: "ProductCategories")
}

type Order {
  id: ID! @isUnique
  stripeCustomerId: String!
  BasketId: String
  email: String!
  billingName: String!
  billingLine1: String!
  billingLine2: String
  billingCity: String
  billingState: String!
  billingPostalCode: String!
  billingCountry: String!
  shippingName: String!
  shippingLine1: String!
  shippingLine2: String
  shippingCity: String
  shippingState: String!
  shippingPostalCode: String!
  shippingCountry: String!
  shippingInstructions: String
  orderTotal: Int!
  fulfillmentStatus: FulfillmentStatus! @defaultValue(value: NOT_FULFILLED)
  lineItems: [OrderItem!]! @relation(name: "OrderItems")
  createdAt: DateTime!
  updatedAt: DateTime!
}

type OrderItem {
  id: ID! @isUnique
  order: Order! @relation(name: "OrderItems")
  quantity: Int! @defaultValue(value: 1)
  subTotal: Int! @defaultValue(value: 0)
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum FulfillmentStatus {
  FULFILLED
  NOT_FULFILLED
}
